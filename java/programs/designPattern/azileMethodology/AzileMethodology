Core principles of Agile methodology:
-------------------------------------
	1. Iterative development:
		Break down large projects into smaller, manageable chunks called iterations (usually 1-4 weeks). Each iteration focuses on delivering a functional piece of the software.

	2. Focus on customer feedback:
		Continuously gather feedback from customers and stakeholders throughout the development process. This allows you to adapt and refine the product based on their needs.

	3. Collaboration:
		Agile promotes close collaboration between developers, testers, and other stakeholders. This fosters a shared understanding of the project goals and leads to better decision-making.

	4. Embrace change:
		Agile acknowledges that requirements may change over time. The methodology allows for easy adaptation to accommodate these changes.


Benefits of Agile for Java development:
	. Faster delivery:
		Agile helps deliver working software more frequently, reducing time to market.
	. Improved quality:
		Continuous feedback loop helps identify and fix issues early in the development process.
	. Increased flexibility:
		Agile allows you to adapt to changing requirements more easily.
	. Better team morale:
		The collaborative nature of Agile fosters a sense of ownership and improves team morale.


Popular Agile frameworks with Java:
	. Scrum:
		A popular Agile framework that uses short sprints (iterations) and focuses on delivering a product backlog (list of features) incrementally.


Java's strengths in Agile development:
	.Platform independence:
		Java code can run on various platforms, making it suitable for distributed Agile teams.
	. Object-oriented paradigm:
		Java's object-oriented features promote modular and reusable code, which aligns well with Agile principles.
	. Rich library support:
		Java has a vast ecosystem of libraries and frameworks that can streamline Agile development tasks.